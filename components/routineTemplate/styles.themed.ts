import { StyleSheet } from 'react-native';
import Colors from '@/constants/Colors';
import { SPACING, FONT_SIZES, BORDER_RADIUS } from '@/constants/Theme';
import type { ThemeMode } from '@/hooks/useThemedStyles';

export const makeRoutineTemplateStyles = (theme: ThemeMode) => {
  const isDark = theme === 'dark';
  const palette = Colors[theme];
  const colors = {
    background: palette.background,
    text: palette.text,
    tint: palette.tint,
    cardBg: isDark ? '#1F1F1F' : '#FFFFFF',
    cardBg2: isDark ? '#1A1A1A' : '#F7F7F7',
    border: isDark ? '#333333' : '#DDDDDD',
    muted: isDark ? '#B0B0B0' : '#666666',
    dim: isDark ? '#666666' : '#999999',
    badgeFreeBg: isDark ? '#2E2E2E' : '#EEEEEE',
    danger: '#FF6B35',
    overlay: 'rgba(0,0,0,0.6)',
    onTint: '#FFFFFF',
    skeleton: isDark ? '#333333' : '#E6E6E6',
    shadow: '#000',
  } as const;

  const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: colors.background,
      padding: SPACING.lg,
    },
    header: { paddingTop: SPACING.sm, paddingBottom: SPACING.md },
    headerTitle: {
      fontSize: 28,
      fontWeight: 'bold',
      color: colors.text,
      marginBottom: 4,
    },
    headerSubtitle: { fontSize: 16, color: colors.muted },
    title: {
      fontSize: 24,
      fontWeight: '700',
      color: colors.text,
      marginBottom: SPACING.md,
    },
    sectionTitle: {
      fontSize: FONT_SIZES.xl,
      fontWeight: '600',
      color: colors.text,
      marginTop: SPACING.xl,
      marginBottom: SPACING.sm,
    },
    text: {
      color: colors.muted,
      marginBottom: SPACING.xs,
      fontSize: FONT_SIZES.md,
    },
    error: {
      color: colors.danger,
      marginBottom: SPACING.sm,
      fontSize: FONT_SIZES.md,
    },

    card: {
      backgroundColor: colors.cardBg,
      padding: SPACING.lg,
      borderRadius: BORDER_RADIUS.xl,
      marginBottom: SPACING.md,
      borderWidth: 1,
      borderColor: colors.border,
    },
    cardTitle: {
      fontSize: FONT_SIZES.lg,
      fontWeight: '600',
      color: colors.text,
      marginBottom: SPACING.xs,
    },
    badgeRow: {
      flexDirection: 'row',
      alignItems: 'center',
      gap: 8,
      marginBottom: SPACING.xs,
      backgroundColor: colors.cardBg,
    },
    badge: {
      paddingHorizontal: 10,
      paddingVertical: 4,
      borderRadius: 20,
      fontSize: FONT_SIZES.xs,
      fontWeight: '600',
      overflow: 'hidden',
    },
    badgePremium: { backgroundColor: colors.tint, color: colors.onTint },
    badgeFree: { backgroundColor: colors.badgeFreeBg, color: colors.muted },
    assignButton: {
      marginTop: SPACING.sm,
      backgroundColor: colors.tint,
      paddingVertical: SPACING.sm,
      paddingHorizontal: SPACING.lg,
      borderRadius: BORDER_RADIUS.md,
      alignItems: 'center',
    },
    assignLabel: {
      color: colors.onTint,
      fontWeight: '600',
      fontSize: FONT_SIZES.md,
    },

    listCard: {
      backgroundColor: colors.cardBg2,
      padding: SPACING.md,
      marginVertical: SPACING.xs,
      borderRadius: BORDER_RADIUS.xl,
      borderWidth: 1,
      borderColor: colors.border,
      shadowColor: colors.shadow,
      shadowOffset: { width: 0, height: 2 },
      shadowOpacity: 0.3,
      shadowRadius: 4,
      elevation: 3,
    },
    listHeader: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      marginBottom: SPACING.sm,
    },
    listTitle: {
      fontSize: FONT_SIZES.lg,
      fontWeight: '600',
      color: colors.text,
      flex: 1,
    },
    statusText: {
      fontSize: FONT_SIZES.sm,
      fontWeight: '600',
      paddingHorizontal: SPACING.sm,
      paddingVertical: SPACING.xs,
      borderRadius: BORDER_RADIUS.sm,
      backgroundColor: colors.tint,
      color: colors.onTint,
    },
    description: {
      fontSize: FONT_SIZES.sm,
      color: colors.muted,
      marginBottom: SPACING.sm,
      lineHeight: 20,
    },
    row: { flexDirection: 'row', gap: SPACING.sm, marginVertical: SPACING.xs },
    label: {
      fontSize: FONT_SIZES.sm,
      color: isDark ? '#888888' : '#777777',
      fontWeight: '500',
      minWidth: 80,
    },
    value: { fontSize: FONT_SIZES.sm, color: colors.text, flex: 1 },

    formContainer: {
      flex: 1,
      backgroundColor: colors.background,
      padding: SPACING.lg,
    },
    formTitle: {
      fontSize: FONT_SIZES.xl,
      fontWeight: '600',
      color: colors.text,
      marginBottom: SPACING.md,
    },
    formError: {
      color: colors.danger,
      marginVertical: SPACING.sm,
      fontSize: FONT_SIZES.md,
    },
    info: {
      color: colors.tint,
      marginTop: SPACING.sm,
      fontSize: FONT_SIZES.md,
    },
    formCard: {
      backgroundColor: colors.cardBg2,
      padding: SPACING.md,
      borderRadius: BORDER_RADIUS.xl,
      marginVertical: SPACING.xs,
      borderWidth: 1,
      borderColor: colors.border,
    },
    cardText: {
      fontSize: FONT_SIZES.sm,
      color: colors.text,
      fontFamily: 'monospace',
    },
    formLabel: {
      marginBottom: SPACING.xs,
      color: colors.text,
      fontSize: FONT_SIZES.md,
      fontWeight: '500',
    },
    textarea: {
      borderWidth: 1,
      borderColor: isDark ? '#444444' : '#CCCCCC',
      backgroundColor: colors.cardBg2,
      color: colors.text,
      padding: SPACING.md,
      borderRadius: BORDER_RADIUS.md,
      minHeight: 120,
      textAlignVertical: 'top',
      marginBottom: SPACING.sm,
      fontSize: FONT_SIZES.md,
    },
    formRow: {
      flexDirection: 'row',
      gap: SPACING.sm,
      marginVertical: SPACING.sm,
    },

    filterButton: {
      padding: 8,
      borderRadius: 20,
      backgroundColor: isDark ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.04)',
      position: 'relative',
      alignItems: 'center',
      justifyContent: 'center',
    },
    filterBadge: {
      position: 'absolute',
      top: -4,
      right: -4,
      backgroundColor: colors.danger,
      borderRadius: 10,
      minWidth: 20,
      height: 20,
      alignItems: 'center',
      justifyContent: 'center',
      paddingHorizontal: 4,
    },
    filterBadgeText: { color: colors.onTint, fontSize: 12, fontWeight: '600' },

    fabCreate: {
      position: 'absolute',
      bottom: 64,
      right: 24,
      backgroundColor: colors.tint,
      width: 56,
      height: 56,
      borderRadius: 28,
      alignItems: 'center',
      justifyContent: 'center',
      shadowColor: colors.shadow,
      shadowOpacity: 0.4,
      shadowRadius: 6,
      shadowOffset: { width: 0, height: 3 },
      elevation: 6,
    },
    fabIcon: { color: colors.onTint, fontSize: 24, fontWeight: '600' },

    // Modal pieces
    modalBackdrop: {
      flex: 1,
      backgroundColor: colors.overlay,
      justifyContent: 'center',
      padding: 24,
    },
    modalCard: {
      backgroundColor: colors.cardBg,
      borderRadius: 12,
      padding: 20,
    },
    modalTitle: {
      fontSize: 18,
      fontWeight: '600',
      color: colors.text,
      marginBottom: 8,
    },
    modalSubTitle: { color: colors.muted, marginBottom: 12 },
    modalLabel: { color: colors.text, fontWeight: '500', marginBottom: 6 },
    modalInput: {
      backgroundColor: isDark ? '#262626' : '#F3F3F3',
      borderWidth: 1,
      borderColor: colors.border,
      borderRadius: 8,
      padding: 12,
      minHeight: 90,
      color: colors.text,
      textAlignVertical: 'top',
      marginBottom: 12,
    },
    modalActions: { flexDirection: 'row', justifyContent: 'flex-end', gap: 12 },
    modalCancel: { color: colors.muted, fontSize: 16 },
    modalPrimaryButton: {
      backgroundColor: colors.tint,
      paddingHorizontal: 20,
      paddingVertical: 12,
      borderRadius: 24,
      flexDirection: 'row',
      alignItems: 'center',
    },
    modalPrimaryText: { color: colors.onTint, fontWeight: '600', fontSize: 16 },
  });

  return { ...styles, colors };
};
